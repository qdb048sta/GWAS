------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\user\Documents\GitHub\GWAS\20210722_GWAS_on_lbody_height_change_sig1e-6.log
  log type:  text
 opened on:  27 Jul 2021, 10:45:50

. 
. clear all

. macro drop _all

. 
. // set working directory
. cd "C:\TWB_2021"
C:\TWB_2021

. 
. // set path for plink
. global plinkpath "C:\plink\plink.exe"

. global plink2path "C:\plink2\plink2.exe"

. 
. // set data path
. //global data "C:\TWB\combined_TWB1_TWB2\combined.TWB1.TWB2.high.confidence.v1"
. //global data "C:\\TWB_2021\\TWB1_imputation_data\\TWB1.liftOverTohg38.impu.v1"
. global data " C:\TWB_2021\TWB2_imputation_data\TWB2.hg38.impu.v1"

. 
. 
. 
. //global data_one_tenth "C:\TWB\combined_TWB1_TWB2\combined.TWB1.TWB2.high.confidence.v1_10"
. 
. // global data "C:\Data\TWBioBank\TWBR10810-06_Genotype(TWB1.0)\TWBR10810-06_TWB1"
. 
. global datatype "imputation"  /*"imputation" or "", skips QC steps 4 & 5 if enter "imputation"*/

. // global datatype ""  /*"imputation" or "", skips QC steps 4 & 5 if enter "imputation"*/
. 
. 
. global merged_survey "C:\TWB\twbiobank_merged_20201109"  

. /*編號00 do檔製造出來的問卷資料*/
. 
. global do01 "01_plink survey data input_20201116" /*編號01 do檔名稱/位置*/

. 
. 
. /*
> global merged_survey "C:\Data\TWBioBank\twbiobank_merged_20201109"  
> /*編號00 do檔製造出來的問卷資料*/
> 
> global do01 "C:\Data\TWBioBank\01_plink survey data input_20201208" /*編號01 do檔名稱/位置*/
> run "${do01}" /*select individuals*/
> */
. 
. // --------------------------------------------------------------------------------
. global filename = ""

. local loc = strpos("$data", "TWB1")

. if `loc'!=0{
.     global filename = "TWB1_"
. }

. local loc = strpos("$data", "TWB2")

. if `loc'!=0{
.     global filename = "TWB2_"
. }

. local loc = strpos("$data", "combined")

. if `loc'!=0{
.     global filename = "TWB1+2_"
. }

. 
. if "$datatype"=="imputation"{
.     global filename = "${filename}imp_"
. }

. //---------------------------------------------------------------------------------
. // start from certain step, options include "" and elements in `steps'
. global start_from "QC1_maf" /*if "", detects whether files exist and start from latest step*/

. 
. local steps = "QC1_maf QC2_miss QC3_bi QC4_sex QC5_chrom QC6_hwe QC7_het QC9_relate pca QC0_keep gwas clump prs recode"

. 
. global nstart_from .

. local ct 0

. foreach i of local steps{
  2.         local ++ct
  3.         if "`i'"=="${start_from}"{
  4.                 global nstart_from `ct' 
  5.         }
  6. }

. //---------------------------------------------------------------------------------
. // set QC thresholds
. global setmaf = 0.01      /*set minor allele frequency*/

. global setgeno = 0.05     /*set genotype missingness*/

. global setmind = 0.05     /*set individual missingness*/

. global setking = 0.066    /*set individual relatedness*/

.                                                   /*first-degree relations: 0.177; second-degree: 0.088; third-degree: 0.044; */
.                                                   /*between second & third: 0.066*/
. global setwindow = 500    /*set pruning window*/

. global setstep = 5        /*set pruning step size*/

. global setr2 = 0.2        /*set pruning R2*/

. global setclumpr2 = 0.5   /*set clumping R2*/

. global setclumpkb = 250   /*set clumping distance in kilobase*/

. 
. // set number of principal components
. global pcs 10

. 
. // set phenotypes
. //global phenos "eduyrs lbody_height BODY_HEIGHT BMI"
. global phenos "lbody_height"

. //global phenos "l_income_self"
. // global phenos "eduyrs"
. 
. // set significant levels (p-values) for clumping
. //global siglevel_list "0.00000005 0.000001 0.00001"
. //global siglevel_list "0.000001 0.000005"
. 
.  global siglevel_list "0.000001"

. 
. // set sex
. global sex "_m _f _a" /*f for female, m for male, a for all*/

. // global sex "_a"
. 
. // set conditions
. global condition "AGE<=55"  /*if XXX, no need to enter sex, will generate 3 files (male, female, all)*/

. 
. // local list "FID IID SEX AGE birth_year BODY_HEIGHT BODY_WEIGHT lbody_height BMI eduyrs inc_self_mid inc_family_mid"
. global vars "`list'"

. global vars ""

. 
. //=====================================================================================
. 
.         /*
>         QC steps
>         */ 
.         global QC1 = "${filename}A_qc_01_maf"

.         global QC2 = "${filename}A_qc_02_missing"

.         global QC3 = "${filename}A_qc_03_biallelic"

.         global QC4 = "${filename}A_qc_04_sex"

.         global QC5 = "${filename}A_qc_05_chrom"

.         global QC6 = "${filename}A_qc_06_hwe"

.         global QC7 = "${filename}A_qc_07_het"

.         global freq = "${filename}A_qc_freq"

.         global QC9 = "${filename}A_qc_09_relatedness_done"

.         global QC10 = "${filename}A_qc_10_pruned"

.         global QC0 = "${filename}A_qc_00_keep"

. 
. 
.         // remove SNPs with MAF under threshold
. //      Minor allele frequencies/counts
. //      --maf filters out all variants with minor allele frequency below the provided threshold (default 0.01)
. //      https://www.cog-genomics.org/plink/1.9/filter#maf
.         
.         cap confirm file "${QC1}.bed"

.         if (_rc & ${nstart_from}==.)| (${nstart_from}<= 1 & ${nstart_from}!=.) {
. 
.                 timer clear 1
.                 timer on 1
.                 //shell "$plink2path" --bfile "${data}" --thin-indiv 0.1 --make-bed --out "${data_one_tenth}"   //select 1/10
.                 shell "$plink2path" --bfile "${data}" --maf $setmaf --make-bed --out "${QC1}"   //filter out the data with provided threshold
.                 
.                 
.                 timer off 1
.                 qui timer list 1
.                 local time1 = r(t1)/60
.                 di "qc 1 used `time1'  minutes"
qc 1 used .0024333333333333  minutes
.                 
.                 local stop 0 //this pattern repeat over times
.                 cap file close log
.                 file open log using "${QC1}.log", read 
.                 file read log line
.                 while r(eof)==0{
  2.                         file read log line
  3.                         local a =word(`"`line'"', 1)
  4.                         if "`a'" == "Error:"{
  5.                                 local stop 1
  6.                                 di `"`line'"'
  7.                         }
  8.                 }
Error: Failed to open  C:\TWB_2021\TWB2_imputation_data\TWB2.hg38.impu.v1.fam :
.                 file close log
.                 
.                 if `stop'==1{
.                         error 1 /*force break*/
--Break--
r(1);
.                 }
--Break--
r(1);
. 
.         }
--Break--
r(1);

end of do-file

--Break--
r(1);

. log close
      name:  <unnamed>
       log:  C:\Users\user\Documents\GitHub\GWAS\20210722_GWAS_on_lbody_height_change_sig1e-6.log
  log type:  text
 closed on:  27 Jul 2021, 10:47:27
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
